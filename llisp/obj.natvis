<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="obj">
    <DisplayString Condition="typ == CELL &amp;&amp; tail->typ != CELL &amp;&amp; tail != &amp;nil" IncludeView="noparens">{*head} . {*tail}</DisplayString>
    <DisplayString Condition="typ == CELL &amp;&amp; tail->typ != CELL &amp;&amp; tail != &amp;nil" ExcludeView="noparens">({*head} . {*tail})</DisplayString>
    <DisplayString Condition="typ == CELL &amp;&amp; tail->typ != CELL &amp;&amp; tail == &amp;nil" IncludeView="noparens">{*head}</DisplayString>
    <DisplayString Condition="typ == CELL &amp;&amp; tail->typ != CELL &amp;&amp; tail == &amp;nil" ExcludeView="noparens">({*head})</DisplayString>
    <DisplayString Condition="typ == CELL &amp;&amp; tail->typ == CELL" IncludeView="noparens">{*head} {*tail,view(noparens)}</DisplayString>
    <DisplayString Condition="typ == CELL &amp;&amp; tail->typ == CELL" ExcludeView="noparens">({*head} {*tail,view(noparens)})</DisplayString>
    <DisplayString Condition="typ == NUM">{num}</DisplayString>
    <DisplayString Condition="typ == SYMBOL || typ == STRING">{str}</DisplayString>
    <DisplayString Condition="typ == FN || typ == SPECFORM">{fn,na}</DisplayString>
    <DisplayString Condition="typ == LAMBDA &amp;&amp; !closurename">[lambda args={*args}]</DisplayString>
    <DisplayString Condition="typ == LAMBDA &amp;&amp; closurename">[lambda {closurename,na} args={*args}]</DisplayString>
    <DisplayString Condition="typ == MACRO &amp;&amp; !closurename">[macro args={*args}]</DisplayString>
    <DisplayString Condition="typ == MACRO &amp;&amp; closurename">[macro {closurename,na} args={*args}]</DisplayString>
    <DisplayString Condition="typ == BUILTIN">{builtin,sb}</DisplayString>
    <DisplayString Condition="typ == CONTN">{*contnp}</DisplayString>
    <Expand>
      <Item Name="Type">typ</Item>
      
      <Item Name="Head" Condition="typ == CELL">*head</Item>
      <Item Name="Tail" Condition="typ == CELL">*tail</Item>
      
      <Item Name="Num" Condition="typ == NUM">num</Item>
      
      <Item Name="Symbol" Condition="typ == SYMBOL">str</Item>

      <Item Name="Fn" Condition="typ == FN || typ == SPECFORM">fn,na</Item>
      <Item Name="Name" Condition="typ == FN || typ == SPECFORM">fnname,na</Item>
      
      <Item Name="Args" Condition="typ == LAMBDA || typ == MACRO">*args</Item>
      <Item Name="Name" Condition="typ == LAMBDA || typ == MACRO">closurename,na</Item>
      <Item Name="Code" Condition="typ == LAMBDA || typ == MACRO">*code</Item>

      <Item Name="Builtin" Condition="typ == BUILTIN">builtin,sb</Item>

      <Item Name="String" Condition="typ == STRING">str</Item>

      <ExpandedItem Condition="typ == CONTN">contnp</ExpandedItem>
    </Expand>
  </Type>
  
  <Type Name="env">
    <DisplayString>env {{size = {table.size}}}</DisplayString>
    <Expand>
      <Item Name="Parent">parent</Item>
      <ExpandedItem>table</ExpandedItem>
    </Expand>
  </Type>
  
  <Type Name="contn">
    <DisplayString Condition="data">{*data} -&gt; {fn,na}</DisplayString>
    <DisplayString Condition="!data">NULL -&gt; {fn}</DisplayString>
    <Expand>
      <Item Name="Data">data</Item>
      <Item Name="Env">env</Item>
      <Item Name="Next" Condition="next">next</Item>
      <Item Name="Fn" Condition="fn">fn,na</Item>
    </Expand>
  </Type>

  <Type Name="gc_head">
    <DisplayString Condition="next" IncludeView="tail">{marknext &amp; 0x1u}{*next,view(tail)}</DisplayString>
    <DisplayString Condition="next" ExcludeView="tail">{(gctype)((marknext &amp; 0xeu) >> 1)} : {marknext &amp; 0x1u}{*next,view(tail)}</DisplayString>
    <DisplayString Condition="!next" IncludeView="tail">{marknext &amp; 0x1u}</DisplayString>
    <DisplayString Condition="!next" ExcludeView="tail">{(gctype)((marknext &amp; 0xeu) >> 1)} : {marknext &amp; 0x1u}</DisplayString>
    <Expand>
      <Item Name="Marked">(bool)(marknext &amp; 0x1u)</Item>
      <Item Name="Type">(gctype)((marknext &amp; 0xeu) >> 1)</Item>
      <Item Name="Next">next</Item>
      <Item Name="MarkNext">(gc_head*)(marknext &amp; ~0xfull)</Item>
      <Item Name="Obj" Condition="((marknext &amp; 0x6u) >> 1) == GC_OBJ">*(struct obj*)(this)</Item>
      <Item Name="Str" Condition="((marknext &amp; 0x6u) >> 1) == GC_STR">*(string*)(this)</Item>
    </Expand>
  </Type>

  <Type Name="string">
    <DisplayString>{str,[len]s8}</DisplayString>
    <StringView>str,[len]s8</StringView>
    <Expand>
      <Item Name="str">str,[len]s8</Item>
      <Item Name="len">len</Item>
      <Item Name="cap">cap</Item>
    </Expand>
  </Type>

  <Type Name="ht_entry">
    <DisplayString>{key} -&gt; {*value}</DisplayString>
  </Type>
  <Type Name="hashtab">
    <DisplayString>hashtab {{size = {size}}}</DisplayString>
    <Expand>
      <CustomListItems>
        <Variable Name="cur" InitialValue="0" />
        <Size>size</Size>
        <Loop>
          <Exec>cur += __findnonnull(e->entries + cur, cap*2 - cur) / 2</Exec>
          <Item>e->entries[cur]</Item>
          <Exec>cur++</Exec>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>
</AutoVisualizer>
